spring.application.name=propostas

# data source
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:proposta
spring.datasource.username=user
spring.datasource.password=

# feign
feign.client.config.AnaliseClient.read-timeout=1000
feign.client.config.CartaoClient.read-timeout=1000
feign.circuitbreaker.enabled=true

# analise
analiseClient.url=${ANALISE_HOST:http://localhost:9999}
cartaoClient.url=${CARTOES_HOST:http://localhost:8888/api/cartoes}

periodicidade.consulta-cartao=${PERIODICIDADE_CONSULTA_CARTAO:5000}

#security
encryption.password=590561e975aa1cbdaa6ff00da013dfb85656990eef11e504e9febe48a87d3642
encryption.salt=a2f7b94b47bced70
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}

logging.level.root=${LOG_LEVEL:INFO}

#metrics
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${spring.application.name}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.spring.cloud.jdbc.enabled=false

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
